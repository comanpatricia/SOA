{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"recipient\"\n}, \"Recipient Email:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"recipient\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.recipientEmail = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.recipientEmail]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendEmail && $options.sendEmail(...args))\n  }, \"Send Email\")]);\n}","map":{"version":3,"names":["_createElementVNode","for","_createElementBlock","_hoisted_1","type","id","$data","recipientEmail","$event","required","onClick","_cache","args","$options","sendEmail"],"sources":["C:\\xampp\\htdocs\\project-soa\\vue2\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <label for=\"recipient\">Recipient Email:</label>\n    <input type=\"email\" id=\"recipient\" v-model=\"recipientEmail\" required>\n    <button @click=\"sendEmail\">Send Email</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      recipientEmail: '',\n    }\n  },\n  methods: {\n    sendEmail() {\n      const apiKey = 'YOUR_API_KEY';\n      const fromEmail = 'from@example.com';\n      const fromName = 'Sender Name';\n      const subject = 'Test Email from SendGrid';\n      const content = 'This is a test email sent from SendGrid';\n      const recipient = this.recipientEmail;\n\n      // Send the email using SendGrid API\n      axios.post('https://api.sendgrid.com/v3/mail/send', {\n        personalizations: [{ to: [{ email: recipient }] }],\n        from: { email: fromEmail, name: fromName },\n        subject: subject,\n        content: [{ type: 'text/plain', value: content }],\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + apiKey,\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        console.log(response);\n        alert('Email sent successfully!');\n      })\n      .catch(error => {\n        console.error(error);\n        alert('Failed to send email!');\n      });\n    }\n  }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA+C;EAAxCC,GAAG,EAAC;AAAW,GAAC,kBAAgB;;;uBADzCC,mBAAA,CAIM,cAHJC,UAA+C,E,gBAC/CH,mBAAA,CAAqE;IAA9DI,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,WAAW;+DAAUC,KAAA,CAAAC,cAAc,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAhBH,KAAA,CAAAC,cAAc,E,GAC1DP,mBAAA,CAA8C;IAArCU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}