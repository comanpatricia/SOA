{"ast":null,"code":"import Vue from \"vue\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n/** Define a default action to perform after authentication */\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\nlet instance;\n/** Returns the current instance of the SDK */\nexport const getInstance = () => instance;\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = window.location.origin,\n  ...options\n}) => {\n  if (instance) return instance;\n  // The 'instance' is simply a Vue object\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null\n      };\n    },\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(options, config) {\n        this.popupOpen = true;\n        try {\n          await this.auth0Client.loginWithPopup(options, config);\n        } catch (e) {\n          // eslint-disable-next-line\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n      /** Gets the access token using a popup window */\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      }\n    },\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({\n        ...options,\n        client_id: options.clientId,\n        redirect_uri: redirectUri\n      });\n      try {\n        // If the user is returning to the app after authentication..\n        if (window.location.search.includes(\"code=\") && window.location.search.includes(\"state=\")) {\n          // handle the redirect and retrieve tokens\n          const {\n            appState\n          } = await this.auth0Client.handleRedirectCallback();\n          // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize our internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    }\n  });\n  return instance;\n};\n// Create a simple Vue plugin to expose the wrapper object throughout the application\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  }\n};","map":{"version":3,"names":["Vue","createAuth0Client","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","instance","getInstance","useAuth0","onRedirectCallback","redirectUri","origin","options","data","loading","isAuthenticated","user","auth0Client","popupOpen","error","methods","loginWithPopup","config","e","console","getUser","handleRedirectCallback","loginWithRedirect","o","getIdTokenClaims","getTokenSilently","getTokenWithPopup","logout","created","client_id","clientId","redirect_uri","search","includes","appState","Auth0Plugin","install","prototype","$auth"],"sources":["C:/xampp/htdocs/project-soa/vue2/src/auth/index.js"],"sourcesContent":["import Vue from \"vue\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n/** Define a default action to perform after authentication */\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\nlet instance;\r\n/** Returns the current instance of the SDK */\r\nexport const getInstance = () => instance;\r\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\r\nexport const useAuth0 = ({\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  redirectUri = window.location.origin,\r\n  ...options\r\n}) => {\r\n  if (instance) return instance;\r\n// The 'instance' is simply a Vue object\r\n  instance = new Vue({\r\n    data() {\r\n      return {\r\n        loading: true,\r\n        isAuthenticated: false,\r\n        user: {},\r\n        auth0Client: null,\r\n        popupOpen: false,\r\n        error: null\r\n      };\r\n    },\r\n    methods: {\r\n      /** Authenticates the user using a popup window */\r\n      async loginWithPopup(options, config) {\r\n        this.popupOpen = true;\r\ntry {\r\n          await this.auth0Client.loginWithPopup(options, config);\r\n        } catch (e) {\r\n          // eslint-disable-next-line\r\n          console.error(e);\r\n        } finally {\r\n          this.popupOpen = false;\r\n        }\r\nthis.user = await this.auth0Client.getUser();\r\n        this.isAuthenticated = true;\r\n      },\r\n      /** Handles the callback when logging in using a redirect */\r\n      async handleRedirectCallback() {\r\n        this.loading = true;\r\n        try {\r\n          await this.auth0Client.handleRedirectCallback();\r\n          this.user = await this.auth0Client.getUser();\r\n          this.isAuthenticated = true;\r\n        } catch (e) {\r\n          this.error = e;\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      /** Authenticates the user using the redirect method */\r\n      loginWithRedirect(o) {\r\n        return this.auth0Client.loginWithRedirect(o);\r\n      },\r\n      /** Returns all the claims present in the ID token */\r\n      getIdTokenClaims(o) {\r\n        return this.auth0Client.getIdTokenClaims(o);\r\n      },\r\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\r\n      getTokenSilently(o) {\r\n        return this.auth0Client.getTokenSilently(o);\r\n      },\r\n      /** Gets the access token using a popup window */\r\ngetTokenWithPopup(o) {\r\n        return this.auth0Client.getTokenWithPopup(o);\r\n      },\r\n      /** Logs the user out and removes their session on the authorization server */\r\n      logout(o) {\r\n        return this.auth0Client.logout(o);\r\n      }\r\n    },\r\n    /** Use this lifecycle method to instantiate the SDK client */\r\n    async created() {\r\n      // Create a new instance of the SDK client using members of the given options object\r\n      this.auth0Client = await createAuth0Client({\r\n        ...options,\r\n        client_id: options.clientId,\r\n        redirect_uri: redirectUri\r\n      });\r\ntry {\r\n        // If the user is returning to the app after authentication..\r\n        if (\r\n          window.location.search.includes(\"code=\") &&\r\n          window.location.search.includes(\"state=\")\r\n        ) {\r\n          // handle the redirect and retrieve tokens\r\n          const { appState } = await this.auth0Client.handleRedirectCallback();\r\n// Notify subscribers that the redirect callback has happened, passing the appState\r\n          // (useful for retrieving any pre-authentication state)\r\n          onRedirectCallback(appState);\r\n        }\r\n      } catch (e) {\r\n        this.error = e;\r\n      } finally {\r\n        // Initialize our internal authentication state\r\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\r\n        this.user = await this.auth0Client.getUser();\r\n        this.loading = false;\r\n      }\r\n    }\r\n  });\r\nreturn instance;\r\n};\r\n// Create a simple Vue plugin to expose the wrapper object throughout the application\r\nexport const Auth0Plugin = {\r\n  install(Vue, options) {\r\n    Vue.prototype.$auth = useAuth0(options);\r\n  }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}