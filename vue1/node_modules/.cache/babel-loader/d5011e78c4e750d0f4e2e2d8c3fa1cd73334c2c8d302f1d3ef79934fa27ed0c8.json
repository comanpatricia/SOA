{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      recipientEmail: ''\n    };\n  },\n  mounted() {\n    axios.get('http://localhost/project-soa/php1/index.php').then(response => {\n      this.users = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    sendEmail() {\n      const apiKey = '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';\n      const fromEmail = 'comanpatricia27@gmail.com';\n      const fromName = 'Coman Patricia';\n      const subject = 'Test Email from SendGrid';\n      const content = 'This is a test email sent from SendGrid';\n      const recipient = this.recipientEmail;\n\n      // Send the email using SendGrid API\n      axios.post('https://api.sendgrid.com/v3/mail/send', {\n        personalizations: [{\n          to: [{\n            email: recipient\n          }]\n        }],\n        from: {\n          email: fromEmail,\n          name: fromName\n        },\n        subject: subject,\n        content: [{\n          type: 'text/plain',\n          value: content\n        }]\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + apiKey,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n        alert('Email sent successfully!');\n      }).catch(error => {\n        console.error(error);\n        alert('Failed to send email!');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","users","recipientEmail","mounted","get","then","response","catch","error","console","log","methods","sendEmail","apiKey","fromEmail","fromName","subject","content","recipient","post","personalizations","to","email","from","name","type","value","headers","alert"],"sources":["C:\\xampp\\htdocs\\project-soa\\vue1\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Users Table</h1>\n    <table>\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Username</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"user in users\" :key=\"user.id\">\n          <td>{{ user.id }}</td>\n          <td>{{ user.name }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.username }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div>\n    <label for=\"recipient\">Recipient Email:</label>\n    <input type=\"email\" id=\"recipient\" v-model=\"recipientEmail\" required>\n    <button @click=\"sendEmail\">Send Email</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n      recipientEmail: ''\n    };\n  },\n  mounted() {\n    axios.get('http://localhost/project-soa/php1/index.php')\n      .then(response => {\n        this.users = response.data;\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  },\n  methods: {\n    sendEmail() {\n      const apiKey = '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';\n      const fromEmail = 'comanpatricia27@gmail.com';\n      const fromName = 'Coman Patricia';\n      const subject = 'Test Email from SendGrid';\n      const content = 'This is a test email sent from SendGrid';\n      const recipient = this.recipientEmail;\n\n      // Send the email using SendGrid API\n      axios.post('https://api.sendgrid.com/v3/mail/send', {\n        personalizations: [{ to: [{ email: recipient }] }],\n        from: { email: fromEmail, name: fromName },\n        subject: subject,\n        content: [{ type: 'text/plain', value: content }],\n      }, {\n        headers: {\n          'Authorization': 'Bearer ' + apiKey,\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => {\n        console.log(response);\n        alert('Email sent successfully!');\n      })\n      .catch(error => {\n        console.error(error);\n        alert('Failed to send email!');\n      });\n    }\n  }\n};\n</script>\n"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRJ,KAAK,CAACK,GAAG,CAAC,6CAA6C,EACpDC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACL,KAAI,GAAIK,QAAQ,CAACN,IAAI;IAC5B,CAAC,EACAO,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EACDG,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,MAAMC,MAAK,GAAI,uEAAuE;MACtF,MAAMC,SAAQ,GAAI,2BAA2B;MAC7C,MAAMC,QAAO,GAAI,gBAAgB;MACjC,MAAMC,OAAM,GAAI,0BAA0B;MAC1C,MAAMC,OAAM,GAAI,yCAAyC;MACzD,MAAMC,SAAQ,GAAI,IAAI,CAAChB,cAAc;;MAErC;MACAH,KAAK,CAACoB,IAAI,CAAC,uCAAuC,EAAE;QAClDC,gBAAgB,EAAE,CAAC;UAAEC,EAAE,EAAE,CAAC;YAAEC,KAAK,EAAEJ;UAAU,CAAC;QAAE,CAAC,CAAC;QAClDK,IAAI,EAAE;UAAED,KAAK,EAAER,SAAS;UAAEU,IAAI,EAAET;QAAS,CAAC;QAC1CC,OAAO,EAAEA,OAAO;QAChBC,OAAO,EAAE,CAAC;UAAEQ,IAAI,EAAE,YAAY;UAAEC,KAAK,EAAET;QAAQ,CAAC;MAClD,CAAC,EAAE;QACDU,OAAO,EAAE;UACP,eAAe,EAAE,SAAQ,GAAId,MAAM;UACnC,cAAc,EAAE;QAClB;MACF,CAAC,EACAR,IAAI,CAACC,QAAO,IAAK;QAChBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrBsB,KAAK,CAAC,0BAA0B,CAAC;MACnC,CAAC,EACArB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpBoB,KAAK,CAAC,uBAAuB,CAAC;MAChC,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}